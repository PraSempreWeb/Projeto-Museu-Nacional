/ **
* @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | Licenciado MIT / GPL2
* /
! função ( a , b ) { função  c ( a , b ) { var  c = a . createElement ( "p" ) , d = a . getElementsByTagName ( "head" ) [ 0 ] || a . documentElement ; retorno  c . innerHTML = "x <style>" + b + "</style>" , d. insertBefore ( c . lastChild , d . firstChild ) } função  d ( ) { var  a = y . elementos ; return "string" == typeof  a ? a . split ( "" ) : a } função  e ( a , b ) { var  c = y . elementos ;"string" ! = typeof  c && ( c = c . join ( "" ) ) , "string" ! = typeof  a && ( a = a . join ( "" ) ) , y . elementos = c + "" + a , j ( b ) } função  f ( a ) { var  b = x[ a [ v ] ] ; return  b || ( b = { } , w ++ , a [ v ] = w , x [ w ] = b ) , b } função  g ( a , c , d ) { if ( c || ( c = b ) , q ) Retorna c . createElement ( a ) ; d || ( d = f ( c ) ) ; var  e ; return  e = d . cache [ a ] ? d . cache [ a ] . cloneNode ( ) : u . teste ( a ) ? ( d . cache [ a ] = d. createElem ( a ) ) . cloneNode ( ) : d . createElem ( um ) , ! e . canHaveChildren || t . teste ( a ) || e . tagUrn ? e : d . frag . appendChild ( e ) } função  h ( a , c ) { if ( a|| ( a = b ) , q ) retorna  a . createDocumentFragment ( ) ; c = c || f ( a ) ; para ( var  e = c . frag . cloneNode ( ) , g = 0 , h = d ( ) , i = h . comprimento ; i > g ;g ++ ) e . createElement ( h [ g ] ) ; return  e } função  i ( a , b ) { b . cache || ( b . cache = { } , b . createElem = a . createElement , b . createFrag = a . createDocumentFragment , b . frag= b . createFrag ( ) ) , a . createElement = function ( c ) { return  y . shivMethods ? g ( c , a , b ) : b . createElem ( c ) } , a . createDocumentFragment = Function ( "h, f" , "return function () {var n = f.cloneNode (), c = n.createElement; h.shivMethods && (" + d( ) . join ( ) . substituir ( / [ \ w \ - : ] + / g , function ( a ) { return  b . createElem ( a ) , b . frag . createElement ( a ) , 'c ("' + a + '")' } ) + "); retornar n}" ) ( y , b . frag) } função  j ( a ) { a || ( a = b ) ; var  d = f ( a ) ; voltar ! y . shivCSS || p || d . hasCSS || ( d . hasCSS = !! c ( a , "artigo, à parte, diálogo, figcaption, figura, rodapé, cabeçalho, hgroup, principal, nav, seção {display: bloco} marca {background: # FF0; cor: # 000} modelo {display: none} " )) , q || i ( a , d ) , a } função  k ( a ) { para ( var  b , c = a . getElementsByTagName ( "*" ) , e = c . comprimento , f = RegExp ( "^ (?:" + d ( ) . join ( "|" ) + ") $" , "i") , g = [ ] ; e - ; ) b = c [ e ] , f . teste ( b . nodeName ) && g . push ( b . applyElement ( l ( b ) ) ) ; retornar  g } função  l ( a ) { for ( var  b , c =a . atributos , d = c . comprimento , e = a . ownerDocument . createElement ( A + ":" + a . nodeName ) ; d - ; ) b = c [ d ] , b . especificado && e . setAttribute ( b . nodeName , b . nodeValue ) ;return  e . estilo . cssText = a . estilo . cssText , e } function  m ( a ) { for ( var  b , c = a . split ( "{" ) , e = c . length , f = RegExp ( "(^ | [\\ s,> + ~]) (" + d ( ) . join ( " | " ) +") (? = [[\\ s,> + ~ # .:] | $)" , "gi" ) , g = "$ 1" + A + "\\: $ 2" ; e - ; ) b = c [ e ] = c [ e ] . dividir ( "}" ) , b [ b . comprimento - 1 ] = b [ b . comprimento - 1 ] . substituir ( f , g) , c [ e ] = b . junte-se ( "}" ) ; retorno  c . join ( "{" ) } função  n ( a ) { para ( var  b = a . comprimento ; b - ; ) a [ b ] . removeNode ( ) } função  o ( a ) { função b ( ) { clearTimeout ( g . _removeSheetTimer ) , d && d . removeNode ( ! 0 ) , d = null } var  d , e , g = f ( a ) , h = a . namespaces , i = a . parentWindow ; voltar ! B || a .printShived ? a : ( "undefined" == typeof  h [ A ] && h . add ( A ) , i . attachEvent ( "onbeforeprint" , function ( ) { b ( ) ; for ( var  f , g , h , i = a . styleSheets , j = [ ] , l =eu . comprimento , n = Matriz ( l ) ; l - ; ) n [ l ] = i [ l ] ; for ( ; h = n . pop ( ) ; ) if ( ! h . disabled && z . test ( h . media ) ) { try { f = h. importações , g = f . comprimento } catch ( o ) { g = 0 } para ( l = 0 ; g > l ; l ++ ) n . empurre ( f [ l ] ) ; tente { j . push ( h . cssText ) } catch ( o ) { }} j = m ( j . reverse ( ) . join ( "" ) ) , e = k ( a ) , d = c ( a , j ) } ) , i . attachEvent ( "onafterprint" , function ( ) { n ( e ) , clearTimeout ( g . _removeSheetTimer ), g . _removeSheetTimer = setTimeout ( b , 500 ) } ) , a . printShived = ! 0 , a ) } var  p , q , r = "3.7.3" , s = a . html5 || { } , t = / ^ < | ^ (?: botão | mapa | selecionar |textarea | objeto | iframe | opção | optgroup ) $ / i , u = / ^ (?: a | b | code | div | fieldset | h1 | h2 | h3 | h4 | h5 | h6 | i | label | li | ol | p | q | span | forte |estilo | mesa | tbody | td | th | tr | ul ) $ / i , v = "_html5shiv" , w = 0 , x = { } ; ! função ( ) { tente { var  a = b . createElement ( "a" ) ; a . innerHTML = "<xyz> </xyz>" , p ="escondido" em  a , q = 1 == a . childNodes . comprimento || função ( ) { b . createElement ( "a" ) ; var  a = b . createDocumentFragment ( ) ; return "undefined" == typeof  a . cloneNode || "undefined" == typeof  a . createDocumentFragment || "Indefinido"== typeof  a . createElement } ( ) } catch ( c ) { p = ! 0 , q = ! 0 } } ( ) ; var  y = { elementos : s . elementos || "abbr artigo à parte áudio bdi canvas dados datalist details dialog figcaption figura rodapé cabeçalho hgroup marca principal medidor nav saída imagem seção progresso modelo resumo tempo vídeo" , versão : r ,shivCSS : s . shivCSS ! ==! 1 , supportsUnknownElements : q , shivMethods : s . shivMethods ! ==! 1 , digite : "default" , shivDocument : j , createElement : g , createDocumentFragment : h , addElements : e } ; a . html5 = y , j ( b ) ;var  z = / ^ $ | \ b (?: all | print ) \ b / , A = "html5shiv" , B = ! q && função ( ) { var  c = b . documentElement ; voltar ! ( "undefined" == typeof  b . namespaces || "undefined" == typeof  b . parentWindow ||"undefined"==typeof c.applyElement||"undefined"==typeof c.removeNode||"undefined"==typeof a.attachEvent)}();y.type+=" print",y.shivPrint=o,o(b),"object"==typeof module&&module.exports&&(módulo . exportações = y ) } ( "indefinido" ! = tipo de  janela ? janela : este , documento ) ;
